<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

<global-method-security pre-post-annotations="enabled"/>

	<http use-expressions="true">
		
		<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		
		<form-login login-page="/login.html"
		 authentication-failure-url="/login.html?error"
			username-parameter="j_username"
			password-parameter="j_password"
		 />
		<logout logout-success-url="/login.html?logout" />
		<csrf/>
	</http>

	<authentication-manager>
		<authentication-provider>
			<!-- Password encryption -->
				<password-encoder hash="bcrypt"/>

			<!-- here 'dataSource' is the id of 'jdbc:embedded-database' of 'applicationContext.xml' -->
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select userdata.username ,role.name from userdata join userdata_role on userdata.id = userdata_role.users_id join role on userdata_role.roles_id = role.id where userdata.username=?
			"
				users-by-username-query="select username, password, enabled from userdata where username=?" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>